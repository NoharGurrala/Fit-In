{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Downloads/HealthApp/frontend/src/components/LineGraph/LineGraph.js\";\nimport React from \"react\";\nimport styles from \"./LineGraph.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineGraph(props) {\n  const activities = props.activities;\n  const maxYValue = Math.max(...activities.map(activity => Math.max(...activity.values)));\n  const formatActivity = (activity, index) => {\n    const yScale = value => (maxYValue - value) / maxYValue * 100;\n    const points = activity.values.map((value, i) => `${i * 10},${yScale(value)}`).join(\" \");\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n        points: points,\n        fill: \"none\",\n        stroke: activity.color,\n        strokeWidth: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), activity.values.map((value, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: `${i * 10}%`,\n        cy: `${yScale(value)}%`,\n        r: \"3\",\n        fill: activity.color\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: `${(activity.values.length - 1) * 10}%`,\n        y: `${yScale(activity.values[activity.values.length - 1]) - 3}%`,\n        textAnchor: \"end\",\n        dominantBaseline: \"text-bottom\",\n        className: styles.label,\n        children: activity.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, activity.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      className: styles.chart,\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"0\",\n        x2: \"100\",\n        y1: \"100\",\n        y2: \"100\",\n        stroke: \"black\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"0\",\n        x2: \"0\",\n        y1: \"0\",\n        y2: \"100\",\n        stroke: \"black\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), activities.map(activity => ({\n        ...activity,\n        values: activity.values.map(value => parseFloat(value))\n      })).map(formatActivity)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","LineGraph","props","activities","maxYValue","Math","max","map","activity","values","formatActivity","index","yScale","value","points","i","join","children","fill","stroke","color","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","x","length","y","textAnchor","dominantBaseline","className","label","name","container","viewBox","chart","x1","x2","y1","y2","parseFloat","_c","$RefreshReg$"],"sources":["/Users/spartan/Downloads/HealthApp/frontend/src/components/LineGraph/LineGraph.js"],"sourcesContent":["import React from \"react\";\nimport styles from \"./LineGraph.module.css\";\n\nfunction LineGraph(props) {\n  const activities = props.activities;\n\n  const maxYValue = Math.max(...activities.map((activity) => Math.max(...activity.values)));\n\n  const formatActivity = (activity, index) => {\n    const yScale = (value) => ((maxYValue - value) / maxYValue) * 100;\n    const points = activity.values\n      .map((value, i) => `${i * 10},${yScale(value)}`)\n      .join(\" \");\n    return (\n      <g key={activity.name}>\n        <polyline points={points} fill=\"none\" stroke={activity.color} strokeWidth=\"3\" />\n        {activity.values.map((value, i) => (\n          <circle key={i} cx={`${i * 10}%`} cy={`${yScale(value)}%`} r=\"3\" fill={activity.color} />\n        ))}\n        <text x={`${(activity.values.length - 1) * 10}%`} y={`${yScale(activity.values[activity.values.length - 1]) - 3}%`} textAnchor=\"end\" dominantBaseline=\"text-bottom\" className={styles.label}>\n          {activity.name}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <svg viewBox=\"0 0 100 100\" className={styles.chart}>\n        <line x1=\"0\" x2=\"100\" y1=\"100\" y2=\"100\" stroke=\"black\" strokeWidth=\"2\" />\n        <line x1=\"0\" x2=\"0\" y1=\"0\" y2=\"100\" stroke=\"black\" strokeWidth=\"2\" />\n        {activities.map((activity) => ({\n          ...activity,\n          values: activity.values.map((value) => parseFloat(value)),\n        })).map(formatActivity)}\n      </svg>\n    </div>\n  );\n}\n\nexport default LineGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}