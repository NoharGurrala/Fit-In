{"ast":null,"code":"var _jsxFileName = \"/Users/spartan/Downloads/HealthApp/frontend/src/components/AdminPanel/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport styles from \"./AdminPanel.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DASHBOARD_API = \"/admin-panel\";\nfunction AdminPanel() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(`${DASHBOARD_API}`);\n        const response = await axios.get(`${DASHBOARD_API}`);\n        setData(response.data.result);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const filterDataByCurrentDate = () => {\n    if (data) {\n      const currentDate = new Date().toISOString().slice(0, 10); // Get the current date in YYYY-MM-DD format\n      const filteredData = data.filter(item => item.date === currentDate);\n      return filteredData;\n    }\n    return [];\n  };\n  const filterDataByFutureDates = () => {\n    if (data) {\n      const currentDate = new Date().toISOString().slice(0, 10); // Get the current date in YYYY-MM-DD format\n      const filteredData = data.filter(item => item.date > currentDate);\n      const sortedData = filteredData.sort((a, b) => a.date.localeCompare(b.date)); // Sort by date in ascending order\n      return sortedData;\n    }\n    return [];\n  };\n  const formatCharts = () => {\n    const currentDayData = filterDataByCurrentDate();\n    const futureDatesData = filterDataByFutureDates();\n    if (currentDayData.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.graph,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Current Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 500,\n            height: 300,\n            data: currentDayData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"classnum\",\n              fill: \"#E9A95E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.graph,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Future Dates Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 500,\n            height: 300,\n            data: futureDatesData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"classnum\",\n              fill: \"#EEBF2F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No data available for the current date....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: formatCharts()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n}\n_s(AdminPanel, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","styles","jsxDEV","_jsxDEV","DASHBOARD_API","AdminPanel","_s","data","setData","fetchData","console","log","response","get","result","error","filterDataByCurrentDate","currentDate","Date","toISOString","slice","filteredData","filter","item","date","filterDataByFutureDates","sortedData","sort","a","b","localeCompare","formatCharts","currentDayData","futureDatesData","length","className","container","children","graph","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/Users/spartan/Downloads/HealthApp/frontend/src/components/AdminPanel/AdminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\n\nimport styles from \"./AdminPanel.module.css\";\n\n\nconst DASHBOARD_API = \"/admin-panel\";\n\nfunction AdminPanel() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(`${DASHBOARD_API}`);\n        const response = await axios.get(`${DASHBOARD_API}`);\n        setData(response.data.result);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const filterDataByCurrentDate = () => {\n    if (data) {\n      const currentDate = new Date().toISOString().slice(0, 10); // Get the current date in YYYY-MM-DD format\n      const filteredData = data.filter((item) => item.date === currentDate);\n      return filteredData;\n    }\n    return [];\n  };\n\n  const filterDataByFutureDates = () => {\n    if (data) {\n      const currentDate = new Date().toISOString().slice(0, 10); // Get the current date in YYYY-MM-DD format\n      const filteredData = data.filter((item) => item.date > currentDate);\n      const sortedData = filteredData.sort((a, b) => a.date.localeCompare(b.date)); // Sort by date in ascending order\n      return sortedData;\n    }\n    return [];\n  };\n\n  const formatCharts = () => {\n    const currentDayData = filterDataByCurrentDate();\n    const futureDatesData = filterDataByFutureDates();\n    if (currentDayData.length > 0) {\n      return (\n      \n      <div className={styles.container}>\n        <div className={styles.graph}>\n          <h2>Current Day</h2>\n          \n          <BarChart width={500} height={300} data={currentDayData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"classnum\" fill=\"#E9A95E\" />\n          </BarChart>\n        </div>\n        <div className={styles.graph}>\n            <h2>Future Dates Classes</h2>\n            <BarChart width={500} height={300} data={futureDatesData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"classnum\" fill=\"#EEBF2F\" />\n            </BarChart>\n          </div>\n        \n      </div>\n      \n      );\n    } else {\n      return <div>No data available for the current date....</div>;\n    }\n  };\n\n  return <div className={styles.container}>\n    \n    {formatCharts()}</div>;\n}\n\nexport default AdminPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}