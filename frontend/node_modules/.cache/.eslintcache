[{"/Users/spartan/Downloads/HealthApp/frontend/src/index.js":"1","/Users/spartan/Downloads/HealthApp/frontend/src/App.js":"2","/Users/spartan/Downloads/HealthApp/frontend/src/components/BookedClass/BookedClass.js":"3","/Users/spartan/Downloads/HealthApp/frontend/src/components/Activities/Activities.js":"4","/Users/spartan/Downloads/HealthApp/frontend/src/components/AuthContext/AuthContext.js":"5","/Users/spartan/Downloads/HealthApp/frontend/src/components/LogHours/LogHours.js":"6","/Users/spartan/Downloads/HealthApp/frontend/src/components/NavigationBar/NavigationBar.js":"7","/Users/spartan/Downloads/HealthApp/frontend/src/components/Enroll/Enroll.js":"8","/Users/spartan/Downloads/HealthApp/frontend/src/components/FreeTrial/FreeTrial.js":"9","/Users/spartan/Downloads/HealthApp/frontend/src/components/CancelFreeTrial/CancelFreeTrial.js":"10","/Users/spartan/Downloads/HealthApp/frontend/src/components/AboutGym/AboutGym.js":"11","/Users/spartan/Downloads/HealthApp/frontend/src/components/Login/Login.js":"12","/Users/spartan/Downloads/HealthApp/frontend/src/components/Logout/Logout.js":"13","/Users/spartan/Downloads/HealthApp/frontend/src/components/ScheduledClass/ScheduledClass.js":"14","/Users/spartan/Downloads/HealthApp/frontend/src/components/CheckIn/CheckIn.js":"15","/Users/spartan/Downloads/HealthApp/frontend/src/components/ClassSchedule/ClassSchedule.js":"16","/Users/spartan/Downloads/HealthApp/frontend/src/components/AdminPanel/AdminPanel.js":"17","/Users/spartan/Downloads/HealthApp/frontend/src/components/CheckOut/CheckOut.js":"18","/Users/spartan/Downloads/HealthApp/frontend/src/components/HoursSpent/HoursSpent.js":"19","/Users/spartan/Downloads/HealthApp/frontend/src/components/Home/Home.js":"20","/Users/spartan/Downloads/HealthApp/frontend/src/components/BarChart/BarChart.js":"21","/Users/spartan/Downloads/HealthApp/frontend/src/components/LineGraph/LineGraph.js":"22","/Users/spartan/Downloads/HealthApp/frontend/src/components/Dropdown/Dropdown.js":"23","/Users/spartan/Downloads/HealthApp/frontend/src/axios/axiosInstance.js":"24"},{"size":422,"mtime":1683291188000,"results":"25","hashOfConfig":"26"},{"size":2354,"mtime":1683930588414,"results":"27","hashOfConfig":"26"},{"size":1180,"mtime":1683962639498,"results":"28","hashOfConfig":"26"},{"size":2790,"mtime":1683962639495,"results":"29","hashOfConfig":"26"},{"size":625,"mtime":1683291188000,"results":"30","hashOfConfig":"26"},{"size":2566,"mtime":1683962639556,"results":"31","hashOfConfig":"26"},{"size":5547,"mtime":1683961782620,"results":"32","hashOfConfig":"26"},{"size":2010,"mtime":1683962639542,"results":"33","hashOfConfig":"26"},{"size":3417,"mtime":1683962639546,"results":"34","hashOfConfig":"26"},{"size":1381,"mtime":1683962639516,"results":"35","hashOfConfig":"26"},{"size":2165,"mtime":1683962639492,"results":"36","hashOfConfig":"26"},{"size":1751,"mtime":1683962639560,"results":"37","hashOfConfig":"26"},{"size":346,"mtime":1683291188000,"results":"38","hashOfConfig":"26"},{"size":2183,"mtime":1683962639563,"results":"39","hashOfConfig":"26"},{"size":1862,"mtime":1683962639521,"results":"40","hashOfConfig":"26"},{"size":2381,"mtime":1683962639530,"results":"41","hashOfConfig":"26"},{"size":2680,"mtime":1683962639496,"results":"42","hashOfConfig":"26"},{"size":1846,"mtime":1683962639523,"results":"43","hashOfConfig":"26"},{"size":2649,"mtime":1683962639552,"results":"44","hashOfConfig":"26"},{"size":2351,"mtime":1683961091585,"results":"45","hashOfConfig":"26"},{"size":1138,"mtime":1683291188000,"results":"46","hashOfConfig":"26"},{"size":1508,"mtime":1683291188000,"results":"47","hashOfConfig":"26"},{"size":934,"mtime":1683291188000,"results":"48","hashOfConfig":"26"},{"size":225,"mtime":1683964329140,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g1izu1",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/spartan/Downloads/HealthApp/frontend/src/index.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/App.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/BookedClass/BookedClass.js",["134"],[],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./BookedClass.module.css\";\nimport axios from '../../axios/axiosInstance';\n\nconst BOOKED_CLASS_API = \"/booked-class/fetch\";\n\nfunction BookedClass() {\n  const [bookedClasses, setBookedClasses] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const email = localStorage.getItem(\"email\");\n      if (email) {\n        const json = {\n          \"email\": email\n        };\n\n        const response = await axios.post(`${BOOKED_CLASS_API}`, json);\n        setBookedClasses(response.data);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className={styles.pagecontainer}>\n    <div className={styles.container}>\n      <h2>Your Schedule</h2>\n      <div className={styles.list}>\n  {bookedClasses.map((booking) => (\n    <div key={booking.time} className={styles.item}>\n      <div className={styles.title}>{booking.title}</div>\n      <div className={styles.date}>{booking.date}</div>\n      <div className={styles.location}>{booking.city}</div>\n      <div className={styles.time}>{booking.time}</div>\n    </div>\n  ))}\n</div>\n    </div>\n    </div>\n  );\n}\n\nexport default BookedClass;",[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/Activities/Activities.js",["135"],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/AuthContext/AuthContext.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/LogHours/LogHours.js",["136"],[],"import React, { useState } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport styles from \"./LogHours.module.css\";\n\n\nconst LOG_HOURS_API = \"/log-hours\";\n\nfunction LogHours() {\n  const [threadmill, setThreadmill] = useState(0);\n  const [cycling, setCycling] = useState(0);\n  const [stairMachines, setStairMachines] = useState(0);\n  const [weightTraining, setWeightTraining] = useState(0);\n  const email = localStorage.getItem(\"email\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const date = new Date().toISOString().split(\"T\")[0];\n    const data = {\n      date,\n      email,\n      exercise: {\n        threadmill: parseFloat(threadmill),\n        cycling: parseFloat(cycling),\n        stair_machines: parseFloat(stairMachines),\n        weight_training: parseFloat(weightTraining),\n      },\n    };\n    const response = await axios.post(`${LOG_HOURS_API}`, data);\n    console.log(response.data);\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2>Log Hours</h2>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <div className={styles.input}>\n          <label htmlFor=\"threadmill\">Threadmill (hours):</label>\n          <input\n            id=\"threadmill\"\n            type=\"number\"\n            step=\"0.1\"\n            value={threadmill}\n            onChange={(event) => setThreadmill(event.target.value)}\n          />\n        </div>\n        <div className={styles.input}>\n          <label htmlFor=\"cycling\">Cycling (hours):</label>\n          <input\n            id=\"cycling\"\n            type=\"number\"\n            step=\"0.1\"\n            value={cycling}\n            onChange={(event) => setCycling(event.target.value)}\n          />\n        </div>\n        <div className={styles.input}>\n          <label htmlFor=\"stair-machines\">Stair Machines (hours):</label>\n          <input\n            id=\"stair-machines\"\n            type=\"number\"\n            step=\"0.1\"\n            value={stairMachines}\n            onChange={(event) => setStairMachines(event.target.value)}\n          />\n        </div>\n        <div className={styles.input}>\n          <label htmlFor=\"weight-training\">Weight Training (hours):</label>\n          <input\n            id=\"weight-training\"\n            type=\"number\"\n            step=\"0.1\"\n            value={weightTraining}\n            onChange={(event) => setWeightTraining(event.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className={styles.button}>\n          Log Hours\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LogHours;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/NavigationBar/NavigationBar.js",["137","138","139"],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/Enroll/Enroll.js",["140"],[],"import React, { useState } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport styles from \"./Enroll.module.css\";\n\n\nconst ENROLL_API = \"/enroll\";\n\nfunction Enroll() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(`${ENROLL_API}`, {\n        email,\n        password,\n        city,\n      });\n      console.log(response.data);\n      setEmail(\"\");\n      setPassword(\"\");\n      setCity(\"\");\n      setError(null);\n    } catch (error) {\n      console.error(error);\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n      <h2>Enroll</h2>\n      {error && <div className={styles.error}>{error}</div>}\n      <form onSubmit={handleSubmit}>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} required />\n        </div>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"password\">Password:</label>\n          <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} required />\n        </div>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"city\">City:</label>\n          <input type=\"text\" id=\"city\" value={city} onChange={handleCityChange} required />\n        </div>\n        <button type=\"submit\" className={styles.button}>\n          Enroll\n        </button>\n      </form>\n    </div>\n    </div>\n  );\n}\n\nexport default Enroll;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/FreeTrial/FreeTrial.js",["141","142"],[],"import React, { useState, useEffect  } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport styles from \"./FreeTrial.module.css\";\n\n\nconst FREE_TRIAL_API = \"/free-trial\";\n\nfunction FreeTrial() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [members, setMembers] = useState([]);\n\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handleContactNumberChange = (event) => {\n    const input = event.target.value;\n    const numericInput = input.replace(/[^0-9]/g, \"\");\n    setContactNumber(numericInput);\n  };\n  \n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(`${FREE_TRIAL_API}`, {\n        name,\n        email,\n        contactNumber,\n      });\n      console.log(response.data);\n      setName(\"\");\n      setEmail(\"\");\n      setContactNumber(\"\");\n      setError(null);\n      fetchMembers();\n    } catch (error) {\n      console.error(error);\n      setError(error.message);\n    }\n  };\n\n  const fetchMembers = async () => {\n    try {\n      const response = await axios.get(`${FREE_TRIAL_API}`);\n      setMembers(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMembers();\n  }, []); // Fetch members only once when the component mounts\n\n\n  return (\n    <div className={styles.container}>\n     <div className={styles.cardContainer}>\n      <div className={styles.card1}>\n        <h2>FreeTrial</h2>\n        {error && <div className={styles.error}>{error}</div>}\n        <form onSubmit={handleSubmit}>\n          <div className={styles.inputContainer}>\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" value={name} onChange={handleNameChange} required />\n          </div>\n          <div className={styles.inputContainer}>\n            <label htmlFor=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} required />\n          </div>\n          <div className={styles.inputContainer}>\n            <label htmlFor=\"contactNumber\">Contact Number:</label>\n            <input type=\"tel\" id=\"contactNumber\" value={contactNumber} onChange={handleContactNumberChange}  pattern=\"[0-9]*\" required />\n          </div>\n        \n          <button type=\"submit\" className={styles.button}>\n            FreeTrial\n          </button>\n        </form>\n      </div>\n      <div className={styles.card2}>\n        {members.length > 0 && (\n        <div className={styles.memberList}>\n          <h3>Free Trial Members:</h3>\n          <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Contact Number</th>\n                </tr>\n              </thead>\n              <tbody>\n                {members.map((member) => (\n                <tr key={member._id}>\n                  <td>{member.name}</td>\n                  <td>{member.email}</td>\n                  <td>{member.contactNumber}</td>  \n                </tr>\n              ))}\n              </tbody>\n          </table>\n        </div>\n         )}\n      </div>\n    </div> \n    </div>\n  );\n}\n\nexport default FreeTrial;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/CancelFreeTrial/CancelFreeTrial.js",["143"],[],"import React, { useState } from 'react';\n\nimport styles from './CancelFreeTrial.module.css';\nimport axios from '../../axios/axiosInstance';\nconst CANCEL_FREE_TRIAL_API = '/cancel-free-trial';\n\nconst CancelFreeTrial = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleCancel = async () => {\n    try {\n      const response = await axios.post(`${CANCEL_FREE_TRIAL_API}`, { email });\n      alert(response.data.message);\n      setEmail('');\n      setError(null);\n    } catch (error) {\n      console.error(error);\n      setError('There was an error cancelling your free trial.');\n    }\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n    setError(null); // Clear the error when the email is changed\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n      <h2>Cancel Free Trial</h2>\n      <p>Enter a email address to cancel the free trial:</p>\n      <input\n        className={styles.input}\n        type=\"email\"\n        value={email}\n        onChange={handleEmailChange}\n        placeholder=\"Email Address\" required\n      />\n      {error && <div className={styles.error}>{error}</div>}\n      <button className={styles.button} onClick={handleCancel}>\n        Cancel Free Trial\n      </button>\n    </div>\n    </div>\n  );\n};\n\nexport default CancelFreeTrial;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/AboutGym/AboutGym.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/Login/Login.js",["144"],[],"import React, { useState } from 'react';\nimport axios from '../../axios/axiosInstance';\nimport styles from './Login.module.css';\nimport { useAuth } from \"../AuthContext/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst Login = () => {\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(`/login`, { email, password });\n      if (response.status === 200) {\n        localStorage.setItem('email', response.data.email);\n        localStorage.setItem('city', response.data.city);\n        login(response.data.email);\n        navigate('/'); // Redirect to the desired page after login\n      } else {\n        alert('There was an error . Please try again.');\n      }\n    } catch (error) {\n      alert('There was an error logging in. Please try again.');\n    }\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n      <h2><center>Login</center></h2>\n      <input\n        className={styles.input}\n        type=\"email\"\n        value={email}\n        onChange={handleEmailChange}\n        placeholder=\"Email Address\"\n      />\n      <input\n        className={styles.input}\n        type=\"password\"\n        value={password}\n        onChange={handlePasswordChange}\n        placeholder=\"Password\"\n      />\n      <button className={styles.button} onClick={handleLogin}>\n        Login\n      </button>\n    </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/Logout/Logout.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/ScheduledClass/ScheduledClass.js",["145","146","147"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport styles from \"./ScheduledClass.module.css\";\n\nconst SCHEDULED_CLASS_API = \"/scheduled-class\";\nconst INSERT_INDIVIDUAL_CLASS_API = '/booked-class';\n\nfunction ScheduledClass() {\n  const [scheduledClasses, setScheduledClasses] = useState([]);\n  const [date, setDate] = useState(\"\");\n\n  const fetchData = async () => {\n    if (date) {\n      const json = {\n        date: date\n      };\n\n      const response = await axios.post(`${SCHEDULED_CLASS_API}`, json);\n      setScheduledClasses(response.data);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [date]);\n\n  const insertIndividualClass = async (row) => {\n    const booking = {\n      \"email\": localStorage.getItem('email'),\n      \"title\": row.title,\n      \"city\": row.city,\n      \"time\": row.time,\n      \"date\": row.date\n    };\n\n    try {\n      const response = await axios.post(`${INSERT_INDIVIDUAL_CLASS_API}`, booking);\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2>Scheduled Classes</h2>\n      <label htmlFor=\"selectDate\">Select Date:</label>\n      <input\n        type=\"date\"\n        value={date}\n        onChange={(e) => setDate(e.target.value)}\n        className={styles.dateInput}\n      />\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Title</th>\n            <th>City</th>\n            <th>Time</th>\n            <th></th> {/* Add an empty table header for the button */}\n          </tr>\n        </thead>\n        <tbody>\n          {scheduledClasses.map((scheduledClass) => (\n            <tr key={scheduledClass.time}>\n              <td>{scheduledClass.date}</td>\n              <td>{scheduledClass.title}</td>\n              <td>{scheduledClass.city}</td>\n              <td>{scheduledClass.time}</td>\n              <td>\n                <button onClick={() => insertIndividualClass(scheduledClass)}>Join</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n}\n\nexport default ScheduledClass;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/CheckIn/CheckIn.js",["148"],[],"import React, { useState } from \"react\";\nimport styles from \"./CheckIn.module.css\";\nimport axios from '../../axios/axiosInstance';\n\nconst CHECK_IN_API = \"/check-in\";\n\nfunction CheckIn() {\n  const [checkIn, setCheckIn] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    if (email && checkIn) {\n      const json = {\n        email,\n        checkin: new Date(checkIn).toLocaleString(),\n        total: 1,\n      };\n      try {\n        await axios.post(`${CHECK_IN_API}`, json);\n        alert(\"Check in submitted successfully!\");\n        setCheckIn(\"\");\n        setEmail(\"\");\n      } catch (error) {\n        alert(\"Error submitting check in!\");\n      }\n    } else {\n      alert(\"Please fill all fields!\");\n    }\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  return (\n    <div className={styles.pagecontainer}>\n    <div className={styles.container}>\n      <h1 className={styles.h1}>Check In</h1>\n      <form onSubmit={handleSubmit}>\n      <div className={styles.inputContainer}>\n          <label htmlFor=\"email\">Email: </label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={handleEmailChange}\n            placeholder=\"Email Address\"\n          />\n        </div>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"checkin\">Check In:</label>\n          <input\n            type=\"datetime-local\"\n            id=\"checkin\"\n            value={checkIn}\n            onChange={(event) => setCheckIn(event.target.value)}\n            max={new Date().toISOString().slice(0, 16)}\n            required\n          />\n        </div>\n        <button type=\"submit\" className={styles.button}>\n          Submit\n        </button>\n      </form>\n    </div>\n    </div>\n  );\n}\n\nexport default CheckIn;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/ClassSchedule/ClassSchedule.js",["149"],[],"\nimport React, { useState } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport styles from \"./ClassSchedule.module.css\";\n\n\nconst ENROLL_API = \"/class-schedule\";\n\nfunction ClassSchedule() {\n  const [title, setTitle] = useState('');\n  const [city, setCity] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleTitleChange =(event) => {\n    setTitle(event.target.value);\n  }\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  const handleDateChange =(event) => {\n    setDate(event.target.value);\n  }\n\n  const handleTimeChange = (event) => {\n    setTime(event.target.value);\n  };\n  \n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(`${ENROLL_API}`, {\n        title,\n        city,\n        date,\n        time,\n      });\n      console.log(response.data);\n      setTitle(\"\");\n      setCity(\"\");\n      setDate(\"\");\n      setTime(\"\");\n      setError(null);\n    } catch (error) {\n      console.error(error);\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n      <h2>Schedule a Class</h2>\n      {error && <div className={styles.error}>{error}</div>}\n      <form onSubmit={handleSubmit}>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"title\">Class Name:</label>\n          <input type=\"text\" id=\"title\" value={title} onChange={handleTitleChange} required />\n        </div>\n       \n        <div className={styles.inputContainer}>\n          <label htmlFor=\"city\">City:</label>\n          <input type=\"text\" id=\"city\" value={city} onChange={handleCityChange} required />\n        </div>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"Date\">Date:</label>\n          <input type=\"Date\" id=\"date\" value={date} onChange={handleDateChange} required />\n        </div>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"Time\">Time:</label>\n          <input type=\"Time\" id=\"time\" value={time} onChange={handleTimeChange} required />\n        </div>\n        <button type=\"submit\" className={styles.button}>\n          Create Class\n        </button>\n      </form>\n    </div>\n    </div>\n  );\n}\n\nexport default ClassSchedule;\n\n\n\n\n\n\n\n\n\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/AdminPanel/AdminPanel.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/CheckOut/CheckOut.js",["150"],[],"import React, { useState } from \"react\";\nimport styles from \"./CheckOut.module.css\";\nimport axios from '../../axios/axiosInstance';\n\nconst CHECK_OUT_API = \"/check-out\";\n\nfunction CheckOut() {\n  const [checkOut, setCheckOut] = useState(\"\");\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    if (email && checkOut) {\n      const json = {\n        email,\n        checkout: new Date(checkOut).toLocaleString(),\n      };\n      try {\n        await axios.post(`${CHECK_OUT_API}`, json);\n        alert(\"Check out submitted successfully!\");\n        setCheckOut(\"\");\n        setEmail(\"\");\n      } catch (error) {\n        alert(\"Error submitting check out!\");\n      }\n    } else {\n      alert(\"Please fill all fields!\");\n    }\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  return (\n    <div className={styles.pagecontainer}>\n    <div className={styles.container}>\n      <h1 className={styles.h1}>Check Out</h1>\n      <form onSubmit={handleSubmit}>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"email\">Email: </label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={handleEmailChange}\n            placeholder=\"Email Address\"\n          />\n        </div>\n        <div className={styles.inputContainer}>\n          <label htmlFor=\"checkout\">Check Out:</label>\n          <input\n            type=\"datetime-local\"\n            id=\"checkout\"\n            value={checkOut}\n            onChange={(event) => setCheckOut(event.target.value)}\n            max={new Date().toISOString().slice(0, 16)}\n            required\n          />\n        </div>\n        <button type=\"submit\" className={styles.button}>Submit</button>\n      </form>\n    </div>\n    </div>\n  );\n}\n\nexport default CheckOut;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/HoursSpent/HoursSpent.js",["151","152"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from '../../axios/axiosInstance';\nimport styles from \"./HoursSpent.module.css\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\n\n\nconst RECORDS_API = \"/hoursspent\";\nconst RECORDS_TIME_API = \"/hoursspent/time\";\n\nfunction HoursSpentGraph() {\n  const [chartData, setChartData] = useState(null);\n  const [chartTimeData, setChartTimeData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${RECORDS_API}`);\n        setChartData(response.data);\n      } catch (error) {\n        setError(\"An error occurred while fetching data\");\n      }\n      try {\n        const response = await axios.get(`${RECORDS_TIME_API}`);\n        setChartTimeData(response.data);\n      } catch (error) {\n        setError(\"An error occurred while fetching data\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const formatData = () => {\n    const data = [\n      { label: 'Current Day Count', currentDayCount: chartData[\"currentDayCount\"] },\n      { label: 'Past 7 Days Count', past7DaysCount: chartData[\"past7DaysCount\"] }\n    ];\n\n    return data;\n  };\n\n  const formatTimeData = () => {\n    const data = [\n      { label: 'Current Day Count', currentDayCount: chartTimeData[\"currentDayCount\"] },\n      { label: 'Past 7 Days Count', past7DaysCount: chartTimeData[\"past7DaysCount\"] }\n    ];\n\n    return data;\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.graph}>\n        <h2>Number of Hours worked</h2>\n        {error && <div className={styles.error}>{error}</div>}\n        {chartData && <BarChart width={500} height={300} data={formatData()}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"label\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"currentDayCount\" fill=\"#8884d8\" />\n          <Bar dataKey=\"past7DaysCount\" fill=\"#008000\" />\n        </BarChart>}\n      </div>\n\n      <div className={styles.graph}>\n        <h2>Number of Visitors</h2>\n        {error && <div className={styles.error}>{error}</div>}\n        {chartTimeData && <BarChart width={500} height={300} data={formatTimeData()}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"label\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"currentDayCount\" fill=\"#8884d8\" />\n          <Bar dataKey=\"past7DaysCount\" fill=\"#008000\" />\n        </BarChart>}\n      </div>\n    </div>\n  );\n}\n\nexport default HoursSpentGraph;\n","/Users/spartan/Downloads/HealthApp/frontend/src/components/Home/Home.js",["153","154"],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/BarChart/BarChart.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/LineGraph/LineGraph.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/components/Dropdown/Dropdown.js",[],[],"/Users/spartan/Downloads/HealthApp/frontend/src/axios/axiosInstance.js",[],[],{"ruleId":"155","severity":2,"message":"156","line":18,"column":46,"nodeType":"157","messageId":"158","endLine":18,"endColumn":54},{"ruleId":"159","severity":1,"message":"160","line":28,"column":9,"nodeType":"157","messageId":"161","endLine":28,"endColumn":23},{"ruleId":"155","severity":2,"message":"156","line":28,"column":42,"nodeType":"157","messageId":"158","endLine":28,"endColumn":50},{"ruleId":"159","severity":1,"message":"162","line":1,"column":16,"nodeType":"157","messageId":"161","endLine":1,"endColumn":23},{"ruleId":"159","severity":1,"message":"163","line":8,"column":10,"nodeType":"157","messageId":"161","endLine":8,"endColumn":24},{"ruleId":"159","severity":1,"message":"164","line":8,"column":26,"nodeType":"157","messageId":"161","endLine":8,"endColumn":43},{"ruleId":"155","severity":2,"message":"156","line":29,"column":44,"nodeType":"157","messageId":"158","endLine":29,"endColumn":52},{"ruleId":"155","severity":2,"message":"156","line":34,"column":44,"nodeType":"157","messageId":"158","endLine":34,"endColumn":52},{"ruleId":"155","severity":2,"message":"156","line":53,"column":43,"nodeType":"157","messageId":"158","endLine":53,"endColumn":51},{"ruleId":"155","severity":2,"message":"156","line":13,"column":44,"nodeType":"157","messageId":"158","endLine":13,"endColumn":52},{"ruleId":"155","severity":2,"message":"156","line":17,"column":44,"nodeType":"157","messageId":"158","endLine":17,"endColumn":52},{"ruleId":"155","severity":2,"message":"156","line":18,"column":44,"nodeType":"157","messageId":"158","endLine":18,"endColumn":52},{"ruleId":"165","severity":1,"message":"166","line":25,"column":6,"nodeType":"167","endLine":25,"endColumn":12,"suggestions":"168"},{"ruleId":"155","severity":2,"message":"156","line":37,"column":44,"nodeType":"157","messageId":"158","endLine":37,"endColumn":52},{"ruleId":"155","severity":2,"message":"156","line":21,"column":29,"nodeType":"157","messageId":"158","endLine":21,"endColumn":37},{"ruleId":"155","severity":2,"message":"156","line":36,"column":44,"nodeType":"157","messageId":"158","endLine":36,"endColumn":52},{"ruleId":"155","severity":2,"message":"156","line":20,"column":29,"nodeType":"157","messageId":"158","endLine":20,"endColumn":37},{"ruleId":"155","severity":2,"message":"156","line":18,"column":45,"nodeType":"157","messageId":"158","endLine":18,"endColumn":53},{"ruleId":"155","severity":2,"message":"156","line":24,"column":45,"nodeType":"157","messageId":"158","endLine":24,"endColumn":53},{"ruleId":"159","severity":1,"message":"169","line":5,"column":8,"nodeType":"157","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"159","severity":1,"message":"170","line":7,"column":7,"nodeType":"157","messageId":"161","endLine":7,"endColumn":20},"no-undef","'BASE_URL' is not defined.","Identifier","undef","no-unused-vars","'formatActivity' is assigned a value but never used.","unusedVar","'NavLink' is defined but never used.","'showAdminLinks' is assigned a value but never used.","'setShowAdminLinks' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'axios' is defined but never used.","'ABOUT_GYM_API' is assigned a value but never used.",{"desc":"172","fix":"173"},"Update the dependencies array to be: [date, fetchData]",{"range":"174","text":"175"},[665,671],"[date, fetchData]"]